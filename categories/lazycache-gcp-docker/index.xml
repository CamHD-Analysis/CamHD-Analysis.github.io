<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Lazycache Gcp Docker on CamHD Video Analysis</title>
    <link>https://www.camhd.science/categories/lazycache-gcp-docker/</link>
    <description>Recent content in Lazycache Gcp Docker on CamHD Video Analysis</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 05 Jul 2017 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://www.camhd.science/categories/lazycache-gcp-docker/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Scaling out Image Analysis, Part Two:   Making the Docker Image</title>
      <link>https://www.camhd.science/post/2017-07-05-scaling-up-frame-analysis-part-two/</link>
      <pubDate>Wed, 05 Jul 2017 00:00:00 +0000</pubDate>
      
      <guid>https://www.camhd.science/post/2017-07-05-scaling-up-frame-analysis-part-two/</guid>
      <description>Docker containers are an essential component of my scaled analysis. They bring two big benefits to the table: First, I can use it as a kind of heavy-weight package management system, allowing me to wrap up my software and all its messy dependencies into a monolithic image, and easily publish that image to a central repository, knowing that all of the dependency wierdness will be (mostly) ironed out. Second, it lets me separate worker units from hardware units.</description>
    </item>
    
  </channel>
</rss>